apiVersion: apps/v1
kind: Deployment
metadata:
  name: liquibase-project
spec:
  replicas: 2
  selector:
    matchLabels:
      app: liquibase-project
  template:
    metadata:
      labels:
        app: liquibase-project
    spec:
      imagePullSecrets:
        - name: docker-secret
      containers:
        - name: liquibase-project
          image: stefangolubov/liquibase-project:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8888
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /actuator/prometheus
              port: 8888
            initialDelaySeconds: 60
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/prometheus
              port: 8888
            initialDelaySeconds: 60
            periodSeconds: 10
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: db_url
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: postgres_username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: postgres_password
          volumeMounts:
            - name: app-secret
              mountPath: /etc/app-secret
      volumes:
        - name: app-secret
          secret:
            secretName: app-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      containers:
        - name: sonarqube
          image: sonarqube:latest
          ports:
            - containerPort: 9000
          env:
            - name: SONARQUBE_JDBC_URL
              value: jdbc:postgresql://db:5432/postgres
            - name: SONARQUBE_JDBC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: postgres_username
            - name: SONARQUBE_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: postgres_password
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          ports:
          - containerPort: 9090
          volumeMounts:
          - name: prometheus-config
            mountPath: /etc/prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana-oss:latest
        ports:
          - containerPort: 3000
        env:
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: app-secret
                key: gf_security_admin_password
          - name: GF_USERS_ALLOW_SIGN_UP
            value: "false"
          - name: GF_SERVER_DOMAIN
            value: localhost
          - name: GF_LOG_MODE
            value: console file
          - name: GF_LOG_FILTERS
            value: alerting.notifier.slack:debug alertmanager:debug ngalert:debug
        volumeMounts:
          - name: grafana-data
            mountPath: /var/lib/grafana
      volumes:
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-pvc