users:
  put:
    tags:
      - users
    summary: Update an existing user
    description: Update an existing user by Id
    operationId: updateUser
    requestBody:
      description: Update an existing user
      content:
        application/json:
          schema:
            $ref: '../schemas/users.yml#/Users'
        application/xml:
          schema:
            $ref: '../schemas/users.yml#/Users'
        application/x-www-form-urlencoded:
          schema:
            $ref: '../schemas/users.yml#/Users'
      required: true
    responses:
      '200':
        description: User has been successfully updated
        content:
          application/json:
            schema:
              $ref: '../schemas/apiresponse.yml#/ApiResponse'
          application/xml:
            schema:
              $ref: '../schemas/users.yml#/Users'
      '400':
        description: Invalid ID supplied
      '404':
        description: User not found
      '422':
        description: Validation exception
    security:
      - petstore_auth:
          - write:users
          - read:users
  post:
    tags:
      - users
    summary: Add a new user
    description: Add a new user
    operationId: addUser
    requestBody:
      description: Create a new user
      content:
        application/json:
          schema:
            $ref: '../schemas/users.yml#/NewUser'
        application/xml:
          schema:
            $ref: '../schemas/users.yml#/NewUser'
        application/x-www-form-urlencoded:
          schema:
            $ref: '../schemas/users.yml#/NewUser'
      required: true
    responses:
      '200':
        description: User has been successfully added
        content:
          application/json:
            schema:
              $ref: '../schemas/users.yml#/Users'
          application/xml:
            schema:
              $ref: '../schemas/users.yml#/Users'
      '400':
        description: Invalid input
      '422':
        description: Validation exception
    security:
      - petstore_auth:
          - write:users
          - read:users
findByUsername:
  get:
    tags:
      - users
    summary: Find users by username
    description: Multiple usernames can be provided with comma separated strings
    operationId: findUsersByUsername
    parameters:
      - name: usernames
        in: query
        required: false
        schema:
          type: string
    responses:
      '200':
        description: Users have been successfully found by username
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '../schemas/users.yml#/Users'
          application/xml:
            schema:
              type: array
              items:
                $ref: '../schemas/users.yml#/Users'
      '400':
        description: Invalid username
    security:
      - petstore_auth:
          - write:users
          - read:users
findAll:
  get:
    tags:
      - users
    summary: List all users
    operationId: findAllUsers
    responses:
      '200':
        description: Users have been successfully listed
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '../schemas/users.yml#/Users'
          application/xml:
            schema:
              type: array
              items:
                $ref: '../schemas/users.yml#/Users'
      '404':
        description: The resource path is incorrect
      '500':
        description: Internal Server Error
    security:
      - petstore_auth:
          - write:users
          - read:users
userById:
  get:
    tags:
      - users
    summary: Find user by ID
    description: Returns a single user
    operationId: getUserById
    parameters:
      - name: id
        in: path
        description: User ID to return
        required: true
        schema:
          type: string
          format: uuid
    responses:
      '200':
        description: User found by ID
        content:
          application/json:
            schema:
              $ref: '../schemas/users.yml#/Users'
          application/xml:
            schema:
              $ref: '../schemas/users.yml#/Users'
      '400':
        description: Invalid user ID
      '404':
        description: User not found
    security:
      - api_key: [ ]
      - petstore_auth:
          - write:users
          - read:users
  post:
    tags:
      - users
    summary: Updates a user with form data
    description: ''
    operationId: updateUserWithForm
    parameters:
      - name: id
        in: path
        description: ID of user that needs to be updated
        required: true
        schema:
          type: string
          format: uuid
      - name: username
        in: query
        description: Username for the user that needs to be updated
        schema:
          type: string
      - name: email
        in: query
        description: E-mail of the user that needs to be updated
        schema:
          type: string
    responses:
      '400':
        description: Invalid input
    security:
      - petstore_auth:
          - write:users
          - read:users
  delete:
    tags:
      - users
    summary: Deletes a user
    description: delete a user
    operationId: deleteUser
    parameters:
      - name: api_key
        in: header
        description: ''
        required: false
        schema:
          type: string
      - name: id
        in: path
        description: User ID for the user that needs to be deleted
        required: true
        schema:
          type: string
          format: uuid
    responses:
      '400':
        description: Invalid user ID value
    security:
      - petstore_auth:
          - write:users
          - read:users